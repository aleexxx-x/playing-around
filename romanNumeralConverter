import java.util.Scanner;
import java.lang.StringBuilder;

public class Main
{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        System.out.println("Please put caps lock on now :)");
        boolean pl = true;
        while (pl){
            System.out.print("Would you like to enter a Roman Numeral or an integer? (R or I): ");
            String ans = in.nextLine();
            if (ans.charAt(0) == 'R'){
                System.out.print("Enter your Roman Numeral: ");
                String r = in.nextLine();
                System.out.println("Converting...");
                
                int num = 0;
                
                int[] valArray = new int[r.length()+2];
                for(int i = 0; i < r.length(); i++){
                    valArray[i] = val(r.charAt(i));
                }
                valArray[valArray.length-2] = 0;
                valArray[valArray.length-1] = 0;
                
                for(int j = 0; j < valArray.length; j++){
                    if(valArray[j] < valArray[j+1]){
                        valArray[j] = valArray[j+1]-valArray[j];
                        valArray[j+1] = 0;
                        j++;
                    }
                    if(valArray[j+1] == 0){
                        break;
                    }
                }
                for(int k = 0; k < valArray.length; k++){
                    num = num + valArray[k];
                }
                
                System.out.println("Your Roman Numeral as an integer: " + num);
            } else{
                System.out.print("Enter your integer: ");
                int i = in.nextInt();
                System.out.println("Converting...");
                
                String rom = "";
                StringBuilder working = new StringBuilder();
                
                int tmpI = i;
                boolean thisRound = false;
                int pos = 0;
                
                while(tmpI > 0){
                    if (tmpI/1000 != 0 && !thisRound){
                        tmpI = tmpI-1000;
                        thisRound = true;
                        working.append("M");
                        pos++;
                        
                        //500
                    } else if(tmpI/500 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/500 > 3){
                            int tmp = (tmpI/500)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("D");
                                pos++;
                            }
                            tmpI = tmpI - 500*(tmpI/500);
                            working.append("M");
                            pos++;
                        } else {
                            tmpI = tmpI-500;
                            working.append("D");
                            pos++;
                        }
                        
                        //100
                    } else if(tmpI/100 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/100 > 3){
                            int tmp = (tmpI/100)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("C");
                                pos++;
                            }
                            tmpI = tmpI - 100*(tmpI/100);
                            working.append("M");
                            pos++;
                        } else {
                            tmpI = tmpI-100;
                            working.append("C");
                            pos++;
                        }
                        
                        //50
                    } else if(tmpI/50 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/50 > 3){
                            int tmp = (tmpI/50)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("L");
                                pos++;
                            }
                            tmpI = tmpI - 50*(tmpI/50);
                            working.append("D");
                            pos++;
                        } else {
                            tmpI = tmpI-50;
                            working.append("L");
                            pos++;
                        }
                        
                        //10
                    } else if(tmpI/10 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/10 > 3){
                            int tmp = (tmpI/10)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("X");
                                pos++;
                            }
                            tmpI = tmpI - 10*(tmpI/10);
                            working.append("C");
                            pos++;
                        } else {
                            tmpI = tmpI-10;
                            working.append("X");
                            pos++;
                        }
                        
                        //5
                    } else if(tmpI/5 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/5 > 3){
                            int tmp = (tmpI/5)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("V");
                                pos++;
                            }
                            tmpI = tmpI - 5*(tmpI/5);
                            working.append("L");
                            pos++;
                        } else {
                            tmpI = tmpI-5;
                            working.append("V");
                            pos++;
                        }

                       //1
                    } else if(tmpI/1 != 0 && !thisRound){
                        thisRound = true;
                        if(tmpI/1 > 3){
                            int tmp = (tmpI/1)-3;
                            working.deleteCharAt(pos-1);
                            for(int p = 0; p < tmp; p++){
                                working.append("I");
                                pos++;
                            }
                            tmpI = tmpI - 1*(tmpI/1);
                            working.append("X");
                            pos++;
                        } else {
                            tmpI = tmpI-1;
                            working.append("I");
                            pos++;
                        }
                    }
                    thisRound = false;
                }
                
                rom = working.toString();
                
                
                System.out.println("Your integer as a Roman Numeral: " + rom);
                String n = in.nextLine();
            }
        
        System.out.print("Would you like to enter another input to convert? (Y or N): ");
        String play = in.nextLine();
        if(!play.equals("Y")){
            pl = false;
        }
        }
  
    }
    
    public static int val(char c){
        int value = 0;
        
        switch (c){
            case 'I':
                value = 1;
                break;
            case 'V':
                value = 5;
                break;
            case 'X':
                value = 10;
                break;
            case 'L':
                value = 50;
                break;
            case 'C':
                value = 100;
                break;
            case 'D':
                value = 500;
                break;
            case 'M':
                value = 1000;
                break;
        }
        
        return value;
    }
}
